{"version":3,"sources":["Vesalo.js","Crtica.js","App.js","serviceWorker.js","index.js"],"names":["Vesalo","Component","react_default","a","createElement","className","this","props","missed","App","state","zagRec","showWord","zagRecLength","zagRecArr","zagRecArrChecking","correctLettArr","bingo","letterG","atmLettArr","notMatch","message","status","generateWord","_this$state","_this","c","length","toUpperCase","Array","from","Object","toConsumableArray","push","splice","setState","GuessingLetter","e","preventDefault","_this$state2","q","slice","refs","letter","value","w","ww","checkSlovo","slovo","every","target","reset","newGame","correct","guessedLett","_this$state3","map","gl","i","l","Grid","Row","Col","xs","onClick","onSubmit","type","maxLength","size","ref","concat","src_Vesalo","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.60b574f6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Vesalo extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className='wraper-ceo'>\r\n              <div className='wraper'>\r\n              <div >\r\n               {this.props.missed >0 ? <div className='vesalo-glava'>-</div> : null}\r\n               {this.props.missed >1 ? <div className='vesalo-torzo'>-</div>: null}\r\n               {this.props.missed >2 ? <div className='vesalo-Lruka'>-</div>: null}\r\n                {this.props.missed >3 ? <div className='vesalo-Druka'>-</div>: null}\r\n                {this.props.missed >4 ? <div className='vesalo-Lnoga'>-</div>: null}\r\n                {this.props.missed >5 ? <div className='vesalo-Dnoga'>-</div>: null}\r\n             </div>\r\n            </div>\r\n            </div>\r\n            \r\n       \r\n        );\r\n    }\r\n}\r\n\r\nexport default Vesalo;","import React, { Component } from 'react';\r\n\r\nclass Crtica extends Component {\r\nstate={\r\n    message:''\r\n}\r\n    componentDidUpdate(prevProps) {\r\n        // Typical usage (don't forget to compare props):\r\n        if (this.props.msg !== prevProps.msg) {\r\n          this.setState({message:'nema tog slova'});\r\n        }\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <span> _{this.state.message} </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Crtica;","//npm install gh-pages --save-dev\r\n//\"homepage\":\"https://ivanbkovacevic.github.io/vesalica\", -ovo u jsonu\r\n//\"deploy\":\"npm run build&&gh-pages -d build\",\r\n//npm run deploy\r\nimport React, { Component } from 'react';\r\nimport './css/vesalica.css';\r\nimport Crtica from './Crtica';\r\nimport Vesalo from './Vesalo';\r\nimport { Grid, Col, Row,Button } from 'react-bootstrap';\r\nclass App extends Component {\r\n\r\nstate={\r\n  zagRec:'novi sad',\r\n  showWord:false,\r\n  zagRecLength:0,\r\n  zagRecArr:[],\r\n  zagRecArrChecking:[],\r\n  correctLettArr:[],\r\n  bingo:0,\r\n  missed:0,\r\n  letterG:'',\r\n  atmLettArr:['x'],\r\n  notMatch:0,\r\n  message:'',\r\n  status:''\r\n}\r\n\r\ngenerateWord=()=>{ // kreira rec...i kreira crtice za slova i pravi nekoliko arraya\r\n  let {zagRec,zagRecLength,zagRecArr,correctLettArr,notMatch,zagRecArrChecking}=this.state;\r\n   zagRecLength= zagRec.length;//du\\ina nam treba da bismo proveravali da li je doslo do pobede ili poraza kao i za crtanje\r\n   zagRec=zagRec.toUpperCase();\r\n   zagRecArr=  Array.from(zagRec);// pravljenje array od reci jer treba manipulisati sa tim array\r\n   zagRecArrChecking=[...zagRecArr];//array koji sluzi za proveru da li su sva slova pogodjena tj.  registruje da li su sva slova(i duplikati) upisani\r\n   \r\n   for(let c in zagRecArr){ // loop koji proverava da li ima razmaka tj da li ima dve ili vise reci i izbacuje taj elemenat i smanjuje duzinu\r\n     if(zagRecArr[c]===' '){// ovo mora jer inace ubacio bi ubacio crticu i na prayno mesto\r\n      correctLettArr.push(' ');\r\n      zagRecArrChecking.splice(c,1);\r\n      zagRecLength--;\r\n     }else{\r\n      correctLettArr.push('_')\r\n     }\r\n    \r\n   }\r\n   this.setState({zagRec,zagRecLength,zagRecArr,correctLettArr,notMatch,zagRecArrChecking});\r\n}\r\n\r\nshowWord=()=>{ //prikazuje zagonetnu rec...to je kada igrac ne moze da pronadje rec\r\n  let {showWord}=this.state;\r\n  showWord= true;\r\n   this.setState({showWord});\r\n}\r\n\r\n\r\nGuessingLetter=(e)=>{ // igrac pogadja rec...u input upisuje slova i submituje ih  \r\n   e.preventDefault();\r\n  let {letterG,atmLettArr,zagRecArr,zagRecArrChecking,message,correctLettArr,bingo,zagRecLength,notMatch,missed,status}=this.state;\r\n\r\n  atmLettArr=atmLettArr.slice();//niz koji ispisuje slova koje je igrac sve pokusao\r\n  zagRecArr=zagRecArr.slice();\r\n  zagRecArrChecking=zagRecArrChecking.slice();\r\n  correctLettArr=correctLettArr.slice();//array koji hvata tacna slova  tj pogotke\r\n\r\n    letterG = this.refs.letter.value;//hvatanje slova iz inputa\r\n    letterG=letterG.toUpperCase();\r\n    \r\n    \r\n    for(let q in atmLettArr){///////////ovo treba da se sredi/////////////\r\n       if(letterG === atmLettArr[q]){\r\n        message='Vec ste probali ovo slovo';\r\n        this.setState({message});\r\n       }else{\r\n        atmLettArr.push(letterG);\r\n        this.setState({atmLettArr});\r\n       }\r\n    }\r\n   \r\n\r\n    for(let w in zagRecArr ){ //prolazenje kroz arr reci i cekiranje da li se neki elemenat arr poklapa sa guessovanim slovom\r\n      if(zagRecArr[w]===letterG){\r\n        correctLettArr[w]=letterG;//correctLettArr sluzi za ispisivanje pogodjenih slova....mo\\da je moglo da se nayove i displayedLettArr\r\n        message='Pogodili ste slovo';\r\n        this.setState({correctLettArr,message});\r\n      } \r\n  }\r\n\r\n  for(let ww in zagRecArrChecking ){ //cekiranje pogodatak i dobijanje da li pobeda ili ne\r\n    if(zagRecArrChecking[ww]===letterG){\r\n      zagRecArrChecking.splice(ww,1); // zagRecArrChecking sluzi za proveru da li je pronadjena zagonetna rec...taj array se smanjuje...izbacuju se pogodjena slova i dodaje se po poen u bingo \r\n      bingo++;\r\n      this.setState({zagRecArrChecking,bingo});\r\n    } \r\n}\r\n\r\n  this.checkSlovo=(slovo)=>{ // funkcija koja vraca true ili false u zavisnsoti od uslova\r\n    return slovo !== letterG;\r\n   }\r\n\r\n   notMatch=zagRecArr.every(this.checkSlovo);//primenjivanje gornje funkcije na svaki elemenat u nizu\r\n   \r\n     if(notMatch){//ako je true dodavanje poena u missed  i ispisavanje poruke\r\n       message='Nema tog slova u reci !';\r\n       missed++\r\n       this.setState({message,missed})\r\n     }\r\n\r\n      if(bingo===zagRecLength){ //pronaslo se tacno resenje \r\n        message='BRAVO! Nasli ste tacnu rec.';\r\n        status='-win';\r\n        this.setState({message,status})\r\n      }\r\n\r\n      if(missed===6 ){ //missed se dobija kada slovo nije matchovano\r\n        message='IZGUBILI STE PARTIJU';\r\n        status='-loss';\r\n        this.setState({message,status})\r\n      }\r\n\r\n    this.setState({letterG})\r\n    e.target.reset();\r\n}\r\n\r\nnewGame=()=>{\r\n  \r\n  this.setState({\r\n  zagRec:'novi sad',\r\n  showWord:false,\r\n  zagRecLength:0,\r\n  zagRecArr:[],\r\n  zagRecArrChecking:[],\r\n  correctLettArr:[],\r\n  bingo:0,\r\n  missed:0,\r\n  letterG:'',\r\n  atmLettArr:[],\r\n  message:'',\r\n  status:''\r\n});\r\n\r\n}\r\n\r\n  render() {\r\n    let {status,correctLettArr}=this.state;\r\n  \r\n   let correct=null;\r\n   let guessedLett=null;\r\n   \r\n     guessedLett = this.state.atmLettArr.map((gl,i)=>{\r\n      return <span className='crtice'> {gl} ,</span>\r\n    })\r\n\r\n    correct=correctLettArr.map((l,i)=>{\r\n      return <span className='crtice'>{l}</span>\r\n    })\r\n\r\n    return (\r\n      <Grid >\r\n        <Row>\r\n          <Col xs={4}><button className=\"btnmoj\" onClick={this.generateWord}>izaberi rec</button></Col>\r\n          <Col xs={4}> <button className=\"btnmoj\" onClick={this.showWord}>prikazi rec</button></Col>\r\n          <Col xs={4}>  <button className=\"btnmoj\" onClick={this.newGame}>nova igra</button></Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <div className='zag-rec-container'>\r\n              {this.state.showWord ? <div className=\"letters\">{this.state.zagRec}</div> : null} \r\n              <Col xs={12}><span className=\"letters-zagonetka\">{correct}</span></Col>\r\n          </div>\r\n  \r\n        </Row>\r\n    <Row>\r\n      <Col xs={12}> \r\n      <form onSubmit={this.GuessingLetter}>\r\n      <input type='text' maxLength=\"1\" size=\"1\" ref=\"letter\" ></input>\r\n      <button className=\"btnmoj\" type='submit'>Da li ima ovog slova?</button>\r\n      </form>\r\n      </Col>\r\n   \r\n    </Row>\r\n    <Row>\r\n    <Col xs={12}> \r\n    <div> <span className=\"letters\">Pokušana slova:  {guessedLett}</span></div> \r\n    </Col>\r\n     \r\n    </Row>\r\n    <Row>\r\n    <Col xs={12}> \r\n       <div className={`message${status}`}>{this.state.message}</div>\r\n    </Col>\r\n  \r\n    </Row>\r\n    <Row>\r\n      <Vesalo missed={this.state.missed}/>\r\n    </Row>\r\n\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}