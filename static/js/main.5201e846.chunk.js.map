{"version":3,"sources":["Vesalo.js","Crtica.js","LettersToBeGuessed.js","App.js","serviceWorker.js","index.js"],"names":["Vesalo","Component","react_default","a","createElement","className","this","props","missed","LettersToBeGuessed","isUsed","classUsed","onClick","clicked","disabled","concat","value","App","state","gameStarted","gradoviSrbije","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","zagRec","showWord","zagRecLength","zagRecArr","zagRecArrChecking","correctLettArr","azbuka","id","bingo","letterG","notMatch","message","btnMsg","status","generateWord","_this$state","_this","console","log","setState","atmLettArr","gradoviLength","Object","keys","length","zagIndex","Math","floor","random","c","toUpperCase","Array","from","toConsumableArray","push","splice","GuessingLetter","s","i","_this$state2","w","slice","ww","checkSlovo","slovo","every","correct","abc","_this2","_this$state3","map","l","slo","src_LettersToBeGuessed","Grid","Row","Col","xs","src_Vesalo","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5201e846.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Vesalo extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className='wraper-ceo'>\r\n              <div className='wraper'>\r\n              <div >\r\n               {this.props.missed >0 ? <div className='vesalo-glava'>-</div> : null}\r\n               {this.props.missed >1 ? <div className='vesalo-torzo'>-</div>: null}\r\n               {this.props.missed >2 ? <div className='vesalo-Lruka'>-</div>: null}\r\n                {this.props.missed >3 ? <div className='vesalo-Druka'>-</div>: null}\r\n                {this.props.missed >4 ? <div className='vesalo-Lnoga'>-</div>: null}\r\n                {this.props.missed >5 ? <div className='vesalo-Dnoga'>-</div>: null}\r\n             </div>\r\n            </div>\r\n            </div>\r\n            \r\n       \r\n        );\r\n    }\r\n}\r\n\r\nexport default Vesalo;","import React, { Component } from 'react';\r\n\r\nclass Crtica extends Component {\r\nstate={\r\n    message:''\r\n}\r\n    componentDidUpdate(prevProps) {\r\n        // Typical usage (don't forget to compare props):\r\n        if (this.props.msg !== prevProps.msg) {\r\n          this.setState({message:'nema tog slova'});\r\n        }\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <span> _{this.state.message} </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Crtica;","import React, { Component } from 'react';\r\n\r\nclass LettersToBeGuessed extends Component {\r\n\r\n    render() {\r\n        let isUsed=this.props.isUsed;\r\n        let classUsed='';\r\n        if(isUsed){\r\n            classUsed='-used';\r\n        }\r\n        return (\r\n            <button onClick={this.props.clicked} disabled={isUsed} className={`btnmoj-slova${classUsed}`}>{this.props.value}</button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LettersToBeGuessed;","//npm install gh-pages --save-dev\r\n//\"homepage\":\"https://ivanbkovacevic.github.io/vesalica\", -ovo u jsonu\r\n//\"deploy\":\"npm run build&&gh-pages -d build\",\r\n//npm run deploy\r\nimport React, { Component } from 'react';\r\nimport './css/vesalica.css';\r\nimport Crtica from './Crtica';\r\nimport Vesalo from './Vesalo';\r\nimport LettersToBeGuessed from './LettersToBeGuessed';\r\nimport { Grid, Col, Row,Button } from 'react-bootstrap';\r\nclass App extends Component {\r\n\r\nstate={\r\n  gameStarted:false,\r\n  gradoviSrbije:{\r\n    1:'AЛЕКСИНAЦ',2:'БЕОГРAД',3:'ДИМИТРОВГРAД',4:'НОВИ СAД',5:'ЗРЕЊАНИН',6:\"ПAНЧЕВО\",7:\"ВРШAЦ\",8:\"ЧAЧAК\",9:\"КРAГУЈЕВАЦ\",10:\"НИШ\",\r\n    11:\"КРУШЕВAЦ\",12:\"СУБОТИЦA\",13:\"БЕЧЕЈ\",14:\"КИКИНДA\",15:\"КРAЉЕВО\",16:\"ВAЉЕВО\",17:\"СМЕДЕРЕВО\",18:\"ПAРAЋИН\",19:\"ЛЕСКОВAЦ\",20:\"АПAТИН\"\r\n  },\r\n  zagRec:'',\r\n  showWord:false,\r\n  zagRecLength:0,\r\n  zagRecArr:[],\r\n  zagRecArrChecking:[],\r\n  correctLettArr:[],\r\n  azbuka:[{id:0,value:\"A\",clicked:false},{id:1,value:\"Б\",clicked:false},{id:2,value:\"В\",clicked:false},{id:3,value:\"Г\",clicked:false},\r\n  {id:4,value:\"Д\",clicked:false},{id:5,value:\"Е\",clicked:false},{id:6,value:\"Ђ\",clicked:false},{id:7,value:\"Ж\",clicked:false},\r\n  {id:8,value:\"З\",clicked:false},{id:9,value:\"И\",clicked:false},{id:10,value:\"Ј\",clicked:false},{id:11,value:\"К\",clicked:false},\r\n  {id:12,value:\"Л\",clicked:false},{id:13,value:\"Љ\",clicked:false},{id:14,value:\"М\",clicked:false},{id:15,value:\"Н\",clicked:false},\r\n  {id:16,value:\"Њ\",clicked:false},{id:17,value:\"О\",clicked:false},{id:18,value:\"П\",clicked:false},{id:19,value:\"Р\",clicked:false},\r\n  {id:20,value:\"С\",clicked:false},{id:21,value:\"Т\",clicked:false},{id:22,value:\"У\",clicked:false},{id:23,value:\"Ф\",clicked:false},\r\n  {id:24,value:\"Х\",clicked:false},{id:25,value:\"Ц\",clicked:false},{id:26,value:\"Ћ\",clicked:false},{id:27,value:\"Ч\",clicked:false},\r\n  {id:28,value:\"Џ\",clicked:false},{id:29,value:\"Ш\",clicked:false}],\r\n  bingo:0,\r\n  missed:0,\r\n  letterG:'',\r\n  notMatch:0,\r\n  message:'',\r\n  btnMsg:'START',\r\n  status:'',\r\n}\r\n\r\ngenerateWord=()=>{ // kreira rec...i kreira crtice za slova i pravi nekoliko arraya\r\n  let {zagRec,zagRecLength,zagRecArr,correctLettArr,notMatch,zagRecArrChecking,gradoviSrbije,gameStarted,btnMsg}=this.state;\r\n \r\n  if(!gameStarted){\r\n    gameStarted=!gameStarted;\r\n    btnMsg='RESETUJ';\r\n    let gradoviLength=Object.keys(gradoviSrbije).length;\r\n    console.log(gradoviLength);\r\n    console.log(gradoviSrbije);\r\n    let zagIndex= Math.floor(Math.random() * gradoviLength) + 1;\r\n    zagRec=gradoviSrbije[zagIndex];\r\n    console.log(zagRec);\r\n    zagRecLength= zagRec.length;//du\\ina nam treba da bismo proveravali da li je doslo do pobede ili poraza kao i za crtanje\r\n    console.log( zagRecLength);\r\n    zagRec=zagRec.toUpperCase();\r\n    zagRecArr=  Array.from(zagRec);// pravljenje array od reci jer treba manipulisati sa tim array\r\n    zagRecArrChecking=[...zagRecArr];//array koji sluzi za proveru da li su sva slova pogodjena tj.  registruje da li su sva slova(i duplikati) upisani\r\n   \r\n    for(let c in zagRecArr){ // loop koji proverava da li ima razmaka tj da li ima dve ili vise reci i izbacuje taj elemenat i smanjuje duzinu\r\n      if(zagRecArr[c]===' '){// ovo mora jer inace ubacio bi ubacio crticu i na prayno mesto\r\n       correctLettArr.push(' ');\r\n       zagRecArrChecking.splice(c,1);\r\n       zagRecLength--;\r\n      }else{\r\n       correctLettArr.push('_')\r\n      }\r\n    }\r\n    this.setState({zagRec,zagRecLength,zagRecArr,correctLettArr,notMatch,zagRecArrChecking,gameStarted,btnMsg});\r\n  }else{\r\n    console.log('statrtovano');\r\n    gameStarted=!gameStarted;\r\n    this.setState({\r\n      zagRec:'',\r\n      gameStarted,\r\n      showWord:false,\r\n      zagRecLength:0,\r\n      zagRecArr:[],\r\n      zagRecArrChecking:[],\r\n      correctLettArr:[],\r\n      bingo:0,\r\n      missed:0,\r\n      letterG:'',\r\n      atmLettArr:[],\r\n      message:'',\r\n      btnMsg:'NOVA REC',\r\n      status:'',\r\n    \r\n      azbuka:[{id:0,value:\"A\",clicked:false},{id:1,value:\"Б\",clicked:false},{id:2,value:\"В\",clicked:false},{id:3,value:\"Г\",clicked:false},\r\n      {id:4,value:\"Д\",clicked:false},{id:5,value:\"Е\",clicked:false},{id:6,value:\"Ђ\",clicked:false},{id:7,value:\"Ж\",clicked:false},\r\n      {id:8,value:\"З\",clicked:false},{id:9,value:\"И\",clicked:false},{id:10,value:\"Ј\",clicked:false},{id:11,value:\"К\",clicked:false},\r\n      {id:12,value:\"Л\",clicked:false},{id:13,value:\"Љ\",clicked:false},{id:14,value:\"М\",clicked:false},{id:15,value:\"Н\",clicked:false},\r\n      {id:16,value:\"Њ\",clicked:false},{id:17,value:\"О\",clicked:false},{id:18,value:\"П\",clicked:false},{id:19,value:\"Р\",clicked:false},\r\n      {id:20,value:\"С\",clicked:false},{id:21,value:\"Т\",clicked:false},{id:22,value:\"У\",clicked:false},{id:23,value:\"Ф\",clicked:false},\r\n      {id:24,value:\"Х\",clicked:false},{id:25,value:\"Ц\",clicked:false},{id:26,value:\"Ћ\",clicked:false},{id:27,value:\"Ч\",clicked:false},\r\n      {id:28,value:\"Џ\",clicked:false},{id:29,value:\"Ш\",clicked:false}],\r\n    });\r\n  }\r\n  \r\n}\r\n\r\nGuessingLetter=(s,i)=>{ // igrac pogadja rec...u input upisuje slova i submituje ih  \r\n  let {letterG,zagRecArr,zagRecArrChecking,message,correctLettArr,bingo,zagRecLength,showWord,notMatch,missed,status,azbuka}=this.state;\r\n  azbuka=azbuka.slice();\r\n  zagRecArr=zagRecArr.slice();\r\n  zagRecArrChecking=zagRecArrChecking.slice();\r\n  correctLettArr=correctLettArr.slice();//array koji hvata tacna slova  tj pogotke\r\n \r\n    letterG = s;//hvatanje slova iz arraya\r\n    letterG=letterG.toUpperCase();\r\n    azbuka[i].clicked=true;\r\n    this.setState({azbuka});\r\n    \r\n    for(let w in zagRecArr ){ //prolazenje kroz arr reci i cekiranje da li se neki elemenat arr poklapa sa guessovanim slovom\r\n      if(zagRecArr[w]===letterG){\r\n        correctLettArr[w]=letterG;//correctLettArr sluzi za ispisivanje pogodjenih slova....mo\\da je moglo da se nayove i displayedLettArr\r\n        message='Pogodili ste slovo';\r\n        this.setState({correctLettArr,message});\r\n      } \r\n  }\r\n\r\n  for(let ww in zagRecArrChecking ){ //cekiranje pogodatak i dobijanje da li pobeda ili ne\r\n    if(zagRecArrChecking[ww]===letterG){\r\n      zagRecArrChecking.splice(ww,1); // zagRecArrChecking sluzi za proveru da li je pronadjena zagonetna rec...taj array se smanjuje...izbacuju se pogodjena slova i dodaje se po poen u bingo \r\n      bingo++;\r\n      this.setState({zagRecArrChecking,bingo});\r\n    } \r\n}\r\n\r\n  this.checkSlovo=(slovo)=>{ // funkcija koja vraca true ili false u zavisnsoti od uslova\r\n    return slovo !== letterG;\r\n   }\r\n\r\n   notMatch=zagRecArr.every(this.checkSlovo);//primenjivanje gornje funkcije na svaki elemenat u nizu\r\n     if(notMatch){//ako je true dodavanje poena u missed  i ispisavanje poruke\r\n       message='Nema tog slova u reci !';\r\n       missed++\r\n       this.setState({message,missed})\r\n     }\r\n      if(bingo===zagRecLength){ //pronaslo se tacno resenje \r\n        message='BRAVO! Nasli ste tacnu rec.';\r\n        status='-win';\r\n        this.setState({message,status})\r\n      }\r\n\r\n      if(missed===6 ){ //missed se dobija kada slovo nije matchovano\r\n        message='IZGUBILI STE PARTIJU';\r\n        status='-loss';\r\n        showWord=true;\r\n        this.setState({message,status,showWord})\r\n      }\r\n\r\n    this.setState({letterG})\r\n}\r\n\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////////\r\n  render() {\r\n    let {status,correctLettArr}=this.state;\r\n  \r\n   let correct=null;\r\n   let abc=null;\r\n   \r\n    correct=correctLettArr.map((l,i)=>{\r\n      return <span className='crtice'>{l}</span>\r\n    })\r\n\r\n    \r\n    abc=(\r\n      this.state.azbuka.map((slo,i)=>{\r\n      return (<LettersToBeGuessed isUsed={slo.clicked} value={slo.value} clicked={()=>this.GuessingLetter(slo.value,i)}/>\r\n        )\r\n    })\r\n  )\r\n    return (\r\n      <Grid >\r\n        <Row>\r\n          <Col xs={4}><button className=\"btnmoj\" onClick={this.generateWord}>{this.state.btnMsg}</button></Col>\r\n        \r\n        </Row>\r\n\r\n        <Row>\r\n          <div className='zag-rec-container'>\r\n              {this.state.showWord ? <div className=\"letters\">Zagonetna reč je bila: {this.state.zagRec}</div> : null} \r\n              <Col xs={12}><span className=\"letters-zagonetka\">{correct}</span></Col>\r\n          </div>\r\n        </Row>\r\n    <Row>\r\n    <Col xs={12}> \r\n    { this.state.gameStarted ? <div>{abc}</div> : null }\r\n    </Col>\r\n     \r\n    </Row>\r\n    <Row>\r\n    <Col xs={12}> \r\n       <div className={`message${status}`}>{this.state.message}</div>\r\n    </Col>\r\n  \r\n    </Row>\r\n    <Row>\r\n      <Vesalo missed={this.state.missed}/>\r\n    </Row>\r\n\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}