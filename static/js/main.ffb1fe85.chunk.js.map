{"version":3,"sources":["components/Intro.js","components/Vesalo.js","components/Message.js","components/LettersToBeGuessed.js","App.js","serviceWorker.js","index.js"],"names":["Intro","introSlide","console","log","$","slideUp","react_default","a","createElement","id","className","onClick","this","Component","Vesalo","props","missed","Message","state","message","_this","setState","prevProps","prevState","fadeOut","fadeIn","concat","hide","LettersToBeGuessed","isUsed","classUsed","clicked","disabled","value","App","gameStarted","gradoviSrbije","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","zagRec","showWord","zagRecLength","zagRecArr","zagRecArrChecking","correctLettArr","azbuka","bingo","letterG","notMatch","btnMsg","status","remove","gradoviFirebase","dataReady","generateWord","_this$state","i","atmLettArr","gradoviLength","Object","keys","length","Math","floor","random","toUpperCase","Array","from","toConsumableArray","Lj","includes","Nj","Dž","LjIndex","indexOf","NjIndex","DžIndex","c","push","splice","GuessingLetter","s","_this$state2","w","slice","ww","checkSlovo","slovo","every","correct","abc","_this2","_this$state3","map","l","slo","components_LettersToBeGuessed","components_Intro","started","components_Message","components_Vesalo","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ffb1fe85.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport $ from 'jquery';\r\n\r\nclass Intro extends Component {\r\n\r\n    introSlide=()=>{\r\n        console.log('yapocni')\r\n            $(\"#introContainer\").slideUp(\"slow\");\r\n    }\r\n    \r\n    render() {       \r\n        return (\r\n            <div id=\"introContainer\" className=\"intro-container\">\r\n                <h1>Dobro došli u igricu Vešalica</h1>\r\n                 <p>Cilj igre je da pogodite zagonetnu rec</p>\r\n                 <p>U pitanju su gradovi Srbije</p>\r\n                 <p>Kliknite na dugme dole desno za pocetak</p>\r\n                 <button className=\"btnMy btnMy-intro\" onClick={this.introSlide}>Pocni sa igrom</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Intro;","import React, { Component } from 'react';\r\nimport '../css/vesalica.css';\r\n\r\nclass Vesalo extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className='vesalo-container'>   \r\n               {this.props.missed >0 ? <div className='vesalo-glava'>-</div> : null}\r\n               {this.props.missed >1 ? <div className='vesalo-torzo'>-</div>: null}\r\n               {this.props.missed >2 ? <div className='vesalo-Lruka'>-</div>: null}\r\n                {this.props.missed >3 ? <div className='vesalo-Druka'>-</div>: null}\r\n                {this.props.missed >4 ? <div className='vesalo-Lnoga'>-</div>: null}\r\n                {this.props.missed >5 ? <div className='vesalo-Dnoga'>-</div>: null}\r\n            </div>\r\n            \r\n       \r\n        );\r\n    }\r\n}\r\n\r\nexport default Vesalo;","import React, { Component } from 'react';\r\nimport $ from 'jquery';\r\n\r\nclass Message extends Component {\r\n    \r\n state={\r\n     message:this.props.message\r\n }\r\n\r\ncomponentWillMount() {\r\n    let{message}=this.state;\r\n    if(message === this.props.message){\r\n        message=this.props.message;\r\n        this.setState({message});\r\n    }\r\n}\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.message !== this.props.message) {\r\n        $('#message').fadeOut(\"slow\");\r\n        $('#message').fadeIn(\"slow\");    \r\n        }\r\n      }\r\n    render() {\r\n        return (\r\n            <div id=\"message\" className=\"message\">\r\n                <span className={`message-icon ${this.props.hide}`}> \r\n                   {this.props.message==='Pogodili ste slovo' ? <span>&#10004;</span> : <span>&#10006;</span> }\r\n                </span> \r\n            <div className=\"blink\">{this.props.message}</div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Message;\r\n","import React, { Component } from 'react';\r\nimport '../css/vesalica.css';\r\n\r\nclass LettersToBeGuessed extends Component {\r\n\r\n    render() {\r\n        let isUsed=this.props.isUsed;\r\n        let classUsed='';\r\n        if(isUsed){\r\n            classUsed=' used';\r\n        }\r\n        return (\r\n          <button onClick={this.props.clicked} disabled={isUsed} className={`slova${classUsed}`}>{this.props.value}</button>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default LettersToBeGuessed;","//npm install gh-pages \r\n//\"homepage\":\"https://ivanbkovacevic.github.io/vesalica\", -ovo u jsonu\r\n//\"deploy\":\"npm run build&&gh-pages -d build\",\r\n//npm run deploy\r\nimport React, { Component } from 'react';\r\nimport './css/vesalica.css';\r\nimport $ from 'jquery';\r\nimport Intro from './components/Intro';\r\nimport Vesalo from './components/Vesalo';\r\nimport Message from './components/Message';\r\nimport LettersToBeGuessed from './components/LettersToBeGuessed';\r\nclass App extends Component {\r\n\r\nstate={\r\n  gameStarted:false,\r\n  gradoviSrbije:{\r\n    1:'ALEKSINAC',2:'BEOGRAD',3:'DIMITROVGRAD',4:'NOVI SAD',5:'ZRENjANIN',6:\"PANČEVO\",7:\"VRŠAC\",8:\"ČAČAK\",9:\"KRAGUJEVAC\",10:\"NIŠ\",\r\n    11:\"KRUŠEVAC\",12:\"SUBOTICA\",13:\"BEČEJ\",14:\"KIKINDA\",15:\"KRALjEVO\",16:\"VALjEVO\",17:\"SMEDEREVO\",18:\"PARAĆIN\",19:\"LESKOVAC\",20:\"APATIN\"\r\n  },\r\n  zagRec:'',\r\n  showWord:false,\r\n  zagRecLength:0,\r\n  zagRecArr:[],\r\n  zagRecArrChecking:[],\r\n  correctLettArr:[],\r\n  azbuka:[\r\n  {id:0,value:\"A\",clicked:false},{id:1,value:\"B\",clicked:false},{id:2,value:\"C\",clicked:false},{id:3,value:\"D\",clicked:false},\r\n  {id:4,value:\"E\",clicked:false},{id:5,value:\"F\",clicked:false},{id:6,value:\"G\",clicked:false},{id:7,value:\"H\",clicked:false},\r\n  {id:8,value:\"I\",clicked:false},{id:9,value:\"J\",clicked:false},{id:10,value:\"K\",clicked:false},{id:11,value:\"L\",clicked:false},\r\n  {id:12,value:\"M\",clicked:false},{id:13,value:\"N\",clicked:false},{id:14,value:\"O\",clicked:false},{id:15,value:\"P\",clicked:false},\r\n  {id:16,value:\"R\",clicked:false},{id:17,value:\"S\",clicked:false},{id:18,value:\"T\",clicked:false},{id:19,value:\"U\",clicked:false},\r\n  {id:20,value:\"V\",clicked:false},{id:21,value:\"Ć\",clicked:false},{id:22,value:\"Č\",clicked:false},{id:23,value:\"Đ\",clicked:false},\r\n  {id:24,value:\"DŽ\",clicked:false},{id:25,value:\"LJ\",clicked:false},{id:26,value:\"NJ\",clicked:false},{id:27,value:\"Z\",clicked:false},\r\n  {id:28,value:\"Ž\",clicked:false},{id:29,value:\"Š\",clicked:false}],\r\n  bingo:0,\r\n  missed:0,\r\n  letterG:'',\r\n  notMatch:0,\r\n  message:'',\r\n  btnMsg:'START',\r\n  status:'',\r\n  hide:'none',\r\n  remove:'',\r\n  gradoviFirebase:[],\r\n  dataReady:false\r\n  \r\n}\r\n\r\ngenerateWord=()=>{ // kreira rec...i kreira crtice za slova i pravi nekoliko arraya\r\n  let {zagRec,zagRecLength,zagRecArr,correctLettArr,notMatch,zagRecArrChecking,\r\n       gradoviSrbije,gameStarted,btnMsg,azbuka,hide,remove}=this.state;\r\n \r\n  if(!gameStarted){\r\n    gameStarted=!gameStarted;\r\n    btnMsg='RESETUJ';\r\n    hide='none';\r\n    remove='none';\r\n    let gradoviLength=Object.keys(gradoviSrbije).length;\r\n    console.log(gradoviLength);\r\n    console.log(gradoviSrbije);\r\n    let zagIndex= Math.floor(Math.random() * gradoviLength) + 1;\r\n    zagRec=gradoviSrbije[zagIndex]; //nasumično uzimamo gradove iz objekta\r\n    console.log(zagRec);\r\n    zagRecLength= zagRec.length;//dužina nam treba da bismo proveravali da li je doslo do pobede ili poraza kao i za crtanje\r\n    console.log( zagRecLength);\r\n    zagRec=zagRec.toUpperCase();\r\n    zagRecArr = Array.from(zagRec);// pravljenje array od reci jer treba manipulisati sa tim array\r\n    zagRecArrChecking=[...zagRecArr];//array koji sluzi za proveru da li su sva slova pogodjena tj.  registruje da li su sva slova(i duplikati) upisani\r\n  \r\n    let Lj= zagRec.includes(\"LJ\")\r\n    let Nj= zagRec.includes('NJ');\r\n    let Dž= zagRec.includes('DŽ');\r\n    let LjIndex=zagRec.indexOf(\"LJ\")\r\n    let NjIndex=zagRec.indexOf(\"NJ\")\r\n    let DžIndex=zagRec.indexOf(\"DŽ\")\r\n    for(let c in zagRecArr){ // loop koji proverava da li ima razmaka tj da li ima dve ili vise reci i izbacuje taj elemenat i smanjuje duzinu\r\n     \r\n      if(zagRecArr[c]===' '){// ovo mora jer inace ubacio bi ubacio crticu i na prazno mesto\r\n       correctLettArr.push(' ');\r\n       zagRecArrChecking.splice(c,1);\r\n       zagRecLength--;\r\n      \r\n      }else{\r\n       correctLettArr.push('_')\r\n      }\r\n    }\r\n\r\n    if(Lj){// specijalni slucajevi gde se slova pisu sa dva karaktera\r\n        correctLettArr.splice(LjIndex,1);\r\n        zagRecArr[LjIndex]=\"LJ\";\r\n        zagRecArr.splice(LjIndex+1,1);\r\n        zagRecArrChecking=[...zagRecArr];\r\n        zagRecLength--;   \r\n        console.log('iybaceno LJ') \r\n        console.log(correctLettArr) \r\n    }\r\n    if(Nj){\r\n      correctLettArr.splice(NjIndex,1);\r\n      zagRecArr[NjIndex]=\"NJ\";\r\n      zagRecArr.splice(NjIndex+1,1);\r\n      zagRecArrChecking=[...zagRecArr];\r\n      zagRecLength--;   \r\n      console.log('iybaceno NJ') \r\n      console.log(correctLettArr) \r\n  }\r\n  if(Dž){\r\n    correctLettArr.splice(DžIndex,1);\r\n    zagRecArr[DžIndex]=\"DŽ\";\r\n    zagRecArr.splice(DžIndex+1,1);\r\n    zagRecArrChecking=[...zagRecArr];\r\n    zagRecLength--;   \r\n    console.log('iybaceno DŽ') \r\n    console.log(correctLettArr) \r\n}\r\n\r\n    this.setState({zagRec,zagRecLength,zagRecArr,correctLettArr,notMatch,\r\n          zagRecArrChecking,gameStarted,btnMsg,hide,remove});\r\n  }else{\r\n    console.log('startovano');\r\n    gameStarted=!gameStarted;\r\n    hide='none';\r\n   \r\n    for(let i in azbuka){\r\n        azbuka[i].clicked=false;\r\n    }\r\n    this.setState({\r\n      zagRec:'',\r\n      gameStarted,\r\n      showWord:false,\r\n      zagRecLength:0,\r\n      zagRecArr:[],\r\n      zagRecArrChecking:[],\r\n      correctLettArr:[],\r\n      bingo:0,\r\n      missed:0,\r\n      letterG:'',\r\n      atmLettArr:[],\r\n      message:'',\r\n      btnMsg:'NOVA REČ',\r\n      status:'',\r\n       azbuka,hide\r\n    });\r\n  }\r\n  \r\n}\r\n\r\n\r\nGuessingLetter=(s,i)=>{ // igrac pogadja rec...\r\n  let {letterG,zagRecArr,zagRecArrChecking,zagRec,message,correctLettArr,bingo,\r\n       zagRecLength,showWord,notMatch,missed,azbuka,hide}=this.state;\r\n  azbuka=azbuka.slice();\r\n  zagRecArr=zagRecArr.slice();\r\n  zagRecArrChecking=zagRecArrChecking.slice();\r\n  correctLettArr=correctLettArr.slice();//array koji hvata tacna slova  tj pogotke\r\n  hide='';\r\n \r\n    letterG = s;// hvatanje slova kliknutog slova\r\n    console.log(s);\r\n    letterG=letterG.toUpperCase();\r\n    azbuka[i].clicked=true;\r\n    this.setState({azbuka,hide});\r\n\r\n    for(let w in zagRecArr ){ //prolazenje kroz arr reci i cekiranje da li se neki elemenat arr poklapa sa guessovanim slovom\r\n      if(zagRecArr[w]===letterG){\r\n        correctLettArr[w]=letterG;//correctLettArr sluzi za ispisivanje pogodjenih slova....mozda je moglo da se nazove i displayedLettArr\r\n        message='Pogodili ste slovo';\r\n        this.setState({correctLettArr,message});\r\n      }\r\n      \r\n  }\r\n\r\n\r\n  for(let ww in zagRecArrChecking ){ //cekiranje pogodatak i dobijanje da li pobeda ili ne\r\n    if(zagRecArrChecking[ww]===letterG){\r\n      zagRecArrChecking.splice(ww,1); // zagRecArrChecking sluzi za proveru da li je pronadjena zagonetna rec...taj array se smanjuje...izbacuju se pogodjena slova i dodaje se po poen u bingo \r\n      bingo++;\r\n      this.setState({zagRecArrChecking,bingo});\r\n    } \r\n}\r\n\r\n  this.checkSlovo=(slovo)=>{ // funkcija koja vraca true ili false u zavisnoSti od uslova\r\n    return slovo !== letterG;\r\n   }\r\n\r\n   notMatch=zagRecArr.every(this.checkSlovo);//primenjivanje gornje funkcije na svaki elemenat u nizu\r\n     if(notMatch){//ako je true dodavanje poena u missed  i ispisavanje poruke\r\n       message='Nema tog slova';\r\n       missed++\r\n       this.setState({message,missed})\r\n     }\r\n      if(bingo===zagRecLength){ //pronaslo se tacno resenje \r\n        message='Bravo ! Našli ste tačnu reč';\r\n        hide='none';\r\n        this.setState({message,hide})\r\n      }\r\n\r\n      if(missed===6 ){ //missed se dobija kada slovo nije matchovano\r\n        message='Izgubili ste partiju';\r\n        hide='none';\r\n        showWord=true;\r\n        this.setState({message,hide,showWord})\r\n      }\r\n\r\n    this.setState({letterG});\r\n\r\n}\r\n\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////////\r\n  render() {\r\n    let {status,correctLettArr}=this.state;\r\n   let correct=null;\r\n   let abc=null;\r\n   let fire=null;\r\n   \r\n    correct=correctLettArr.map((l,i)=>{\r\n      return <span className='crtice'>{l}</span>\r\n    })\r\n\r\n    abc=(\r\n      this.state.azbuka.map((slo,i)=>{\r\n      return (<LettersToBeGuessed isUsed={slo.clicked} value={slo.value} clicked={()=>this.GuessingLetter(slo.value,i)}/>\r\n        )\r\n    })\r\n  )\r\n\r\n    return (\r\n      <div className=\"main-container\">\r\n            <Intro remove={this.state.remove} started={this.state.gameStarted} />\r\n            <div className=\"row\">\r\n            <div className=\"container-btnLetters\">\r\n             { this.state.gameStarted ?   <div>{abc}</div> : null }\r\n          </div>\r\n            </div>\r\n        <div className=\"row\">\r\n           <div className=\"col-xs-6 col-md-8\">\r\n         \r\n          <Message hide={this.state.hide} message={this.state.message} />\r\n                  <div className='answerContainer'>\r\n                   {this.state.showWord ? <div>Zagonetna reč je bila : {this.state.zagRec}</div> : null}\r\n                  </div>\r\n            <div className=\"container-crtice\"><span className=\"letters-zagonetka\">{correct}</span></div>\r\n           </div>\r\n           <div className=\"col-xs-6 col-md-4\">\r\n             <Vesalo missed={this.state.missed}/> \r\n             <button className=\"btnMy\" onClick={this.generateWord}>{this.state.btnMsg}\r\n            </button>    \r\n           </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/vesalica.css';\r\n\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}